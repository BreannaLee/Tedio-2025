{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\charm\\\\Documents\\\\VSCodeProjects\\\\Tedio-2025\\\\src\\\\Signup.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './signup.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [passwordMatchMessage, setPasswordMatchMessage] = useState('');\n  const [isValid, setIsValid] = useState(false);\n  const validateSignupForm = data => {\n    const {\n      password,\n      confirmPassword\n    } = data;\n    if (password !== confirmPassword) {\n      return {\n        valid: false,\n        error: \"Passwords do not match.\"\n      };\n    }\n\n    // Prepare data for backend (excluding confirmPassword)\n    const backendData = {\n      ...data,\n      confirmPassword: undefined // Remove confirmPassword before sending\n    };\n    return {\n      valid: true,\n      data: backendData\n    };\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const result = validateSignupForm(formData);\n    if (!result.valid) {\n      setPasswordMatchMessage(result.error);\n    } else {\n      setPasswordMatchMessage(\"\");\n      // Send result.data to backend (e.g., via fetch or axios)\n      // fetch('/api/signup', { method: 'POST', body: JSON.stringify(result.data) });\n      console.log('Signup successful!', result.data);\n      // In a real app, you'd navigate to upload page\n      // navigate('/upload');\n    }\n  };\n\n  // Check password match on every change\n  useEffect(() => {\n    if (formData.confirmPassword && formData.password !== formData.confirmPassword) {\n      setPasswordMatchMessage(\"Passwords do not match.\");\n      setIsValid(false);\n    } else if (formData.confirmPassword && formData.password === formData.confirmPassword) {\n      setPasswordMatchMessage(\"\");\n      setIsValid(true);\n    }\n  }, [formData.password, formData.confirmPassword]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"signupForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          placeholder: \"Email\",\n          value: formData.email,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          required: true,\n          placeholder: \"Password\",\n          value: formData.password,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirmPassword\",\n          name: \"confirmPassword\",\n          required: true,\n          placeholder: \"Confirm Password\",\n          value: formData.confirmPassword,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), passwordMatchMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"passwordMatchMessage\",\n          style: {\n            color: 'red'\n          },\n          children: passwordMatchMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(Signup, \"23nehJTaOYY5MjeQaXjkifDChh4=\");\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Signup","_s","formData","setFormData","email","password","confirmPassword","passwordMatchMessage","setPasswordMatchMessage","isValid","setIsValid","validateSignupForm","data","valid","error","backendData","undefined","handleInputChange","e","name","value","target","prev","handleSubmit","preventDefault","result","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","required","type","id","placeholder","onChange","style","color","_c","$RefreshReg$"],"sources":["C:/Users/charm/Documents/VSCodeProjects/Tedio-2025/src/Signup.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './signup.css';\r\n\r\nconst Signup = () => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n  });\r\n  const [passwordMatchMessage, setPasswordMatchMessage] = useState('');\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const validateSignupForm = (data) => {\r\n    const { password, confirmPassword } = data;\r\n\r\n    if (password !== confirmPassword) {\r\n      return { valid: false, error: \"Passwords do not match.\" };\r\n    }\r\n\r\n    // Prepare data for backend (excluding confirmPassword)\r\n    const backendData = {\r\n      ...data,\r\n      confirmPassword: undefined // Remove confirmPassword before sending\r\n    };\r\n\r\n    return { valid: true, data: backendData };\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const result = validateSignupForm(formData);\r\n\r\n    if (!result.valid) {\r\n      setPasswordMatchMessage(result.error);\r\n    } else {\r\n      setPasswordMatchMessage(\"\");\r\n      // Send result.data to backend (e.g., via fetch or axios)\r\n      // fetch('/api/signup', { method: 'POST', body: JSON.stringify(result.data) });\r\n      console.log('Signup successful!', result.data);\r\n      // In a real app, you'd navigate to upload page\r\n      // navigate('/upload');\r\n    }\r\n  };\r\n\r\n  // Check password match on every change\r\n  useEffect(() => {\r\n    if (formData.confirmPassword && formData.password !== formData.confirmPassword) {\r\n      setPasswordMatchMessage(\"Passwords do not match.\");\r\n      setIsValid(false);\r\n    } else if (formData.confirmPassword && formData.password === formData.confirmPassword) {\r\n      setPasswordMatchMessage(\"\");\r\n      setIsValid(true);\r\n    }\r\n  }, [formData.password, formData.confirmPassword]);\r\n\r\n  return (\r\n    <div className=\"signup-container\">\r\n      <h2>Sign Up</h2>\r\n      <form onSubmit={handleSubmit} className=\"signupForm\">\r\n        <div className=\"input-group\">\r\n          <input \r\n            required \r\n            type=\"email\" \r\n            id=\"email\" \r\n            name=\"email\" \r\n            placeholder=\"Email\"\r\n            value={formData.email}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <input \r\n            type=\"password\" \r\n            id=\"password\" \r\n            name=\"password\" \r\n            required \r\n            placeholder=\"Password\"\r\n            value={formData.password}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <input \r\n            type=\"password\" \r\n            id=\"confirmPassword\" \r\n            name=\"confirmPassword\" \r\n            required \r\n            placeholder=\"Confirm Password\"\r\n            value={formData.confirmPassword}\r\n            onChange={handleInputChange}\r\n          />\r\n          {passwordMatchMessage && (\r\n            <div id=\"passwordMatchMessage\" style={{ color: 'red' }}>\r\n              {passwordMatchMessage}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <button type=\"submit\">Create Account</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}